syntax = "proto3";

package seqr;

service QueryService {
  rpc Query(QueryRequest) returns (QueryResponse) {}
}

// This follows the Apache Arrow compute expression representation.
message Expression {
  oneof type {
    string column = 1;   // Reference to a column by name.
    Literal literal = 2; // A literal value.
    Call call = 3;       // A function call.
  }

  message Literal {
    oneof type {
      bool bool_val = 1;
      int32 int32_val = 2;
      int64 int64_val = 3;
      float float_val = 4;
      double double_val = 5;
      string string_val = 6;
    }
  }

  message Call {
    // See https://arrow.apache.org/docs/cpp/compute.html for available
    // functions.
    //
    // The following non-standard functions are available:
    // - list_contains: checks whether a list contains a particular value.
    string function_name = 1;

    // The number of arguments depends on the function.
    repeated Expression arguments = 2;
  }
}

message QueryRequest {
  // A list of URLs to Arrow files (e.g. on GCS) that should be scanned ("FROM"
  // in SQL).
  repeated string arrow_urls = 1;

  // Which columns to return ("SELECT" in SQL).
  repeated string projection_columns = 2;

  // The expression to filter by ("WHERE" in SQL).
  Expression filter_expression = 3;

  // Which columns to sort by ("ORDER BY" in SQL).
  repeated string sort_columns = 4;

  // Sort order ("ASC" / "DESC" in SQL).
  bool sort_ascending = 5;

  // The maximum number of results to return ("LIMIT" in SQL).
  int32 max_results = 6;

  // The index of the first result to return ("OFFSET" in SQL).
  int32 first_result_index = 7;
}

message QueryResponse { int32 num_results = 1; }
